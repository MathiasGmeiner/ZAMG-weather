<?php
function zamgweather_get_weather() {
  $weather = array();
  $weather['icon_path'] = variable_get('zamgweather_icon_path');

  $result = db_select('zamgweather', 'zw')
    ->fields('zw')
    ->orderBy('created', 'DESC')
    ->range(0,variable_get('zamgweather_forecast_days', 3))
    ->execute();
  while($record = $result->fetchAssoc()) {
    $weather[] = $record;
  }

  return $weather;
}

function zamgweather_cron() {
  zamgweather_save_xml_data();
}

function zamgweather_save_xml_data() {
  $xml = zamgweather_get_xml();

  if ($xml) {
    $days = $xml->station->prognose;

    foreach($days->children() as $day){
      $date = strtotime($day->attributes());

      foreach($day->children() as $time){
        switch ($time->attributes()) {
          case '06':
            $icon_6 = $time->param[0];
            $tmp_6 = $time->param[1];
            break;
          case '12':
            $icon_12 = $time->param[0];
            $tmp_12 = $time->param[1];
            break;
          case '18':
            $icon_18 = $time->param[0];
            $tmp_18 = $time->param[1];
            break;
          case 'tag':
            $day_icon = $time->param[0];
            $day_text = $time->param[1];
            $day_tmp_max = $time->param[2];
            $day_tmp_min = $time->param[3];
            break;
        }
      }

      db_insert('zamgweather')
      ->fields(array(
        'icon_day' => $day_icon,
        'text_day' => $day_text,
        'tmp_max_day' => $day_tmp_max,
        'tmp_min_day' => $day_tmp_min,
        'icon_6' => $icon_6,
        'tmp_6' => $tmp_6,
        'icon_12' => $icon_12,
        'tmp_12' => $tmp_12,
        'icon_18' => $icon_18,
        'tmp_18' => $tmp_18,
        'date' => $date,
        'created' => time()
      ))
      ->execute();
    }
  }
}

function zamgweather_get_xml() {

  if (variable_get('zamgweather_xml_path')=="") {
    drupal_set_message(t('Please check your settings for ZAMG weather.') . ' <a href="'. base_path() .'admin/config/system/zamgweather">ZAMG weather</a>', 'warning');

  } else {
    $data = utf8_encode(file_get_contents(variable_get('zamgweather_xml_path')));
    $xml = simplexml_load_string($data);
    if (is_object($xml)) {
      return $xml;
    }
  }
}
/**
 * create menu items for zamg weather
 * @return menu items
 */
function zamgweather_menu() {
  $items = array();

  $items['admin/config/system/zamgweather'] = array(
    'title' => t('ZAMG Weather Settings'),
    'description' => 'Configure ZAMG weather',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('zamgweather_admin_settings_form'),
    'access arguments' => array('administer zamg'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function zamgweather_permission() {
  return array(
    'administer zamg' => array(
      'title' => t('Administer ZAMG weather'),
      'description' => t('Settings for ZAMG weather.'),
    ),
  );
}

function zamgweather_admin_settings_form($form_state) {
  $form['settings'] = array(
    '#type' => 'fieldset',
    '#title' => t('General settings'),
  );
  $form['settings']['zamgweather_xml_path'] = array(
    '#title' => t('XML Path'),
    '#type' => 'textfield',
    '#size' => 65,
    '#maxlength' => 255,
    '#required' => TRUE,
    '#default_value' => variable_get('zamgweather_xml_path'),
    '#description' => t('The path for your Weather-XML-file.'),
  );
  $form['settings']['zamgweather_icon_path'] = array(
    '#title' => t('Icon Path'),
    '#type' => 'textfield',
    '#size' => 65,
    '#maxlength' => 255,
    '#required' => FALSE,
    '#default_value' => variable_get('zamgweather_icon_path', drupal_get_path('module', 'zamgweather') .'/img/weather_icons/'),
    '#description' => t('The path for your custom icons. Leave it empty for default icons.'),
  );
  $form['settings']['zamgweather_forecast_days'] = array(
    '#title' => t('x days of weather forecast'),
    '#type' => 'select',
    '#options' => array(1=>1,2=>2,3=>3),
    '#required' => TRUE,
    '#default_value' => variable_get('zamgweather_forecast_days', 3)
  );
  return system_settings_form($form);
}
